#ifndef _RADIO_CONTROL_H__
#define _RADIO_CONTROL_H__
#include <stdint.h>


typedef void (*radio_rx_cb)(uint8_t*);
typedef void (*radio_tx_cb)(void);


extern uint8_t radio_aborted;

/**
* Starts the radio init procedure
* @param radio_rx_callback sets the function that is called each time the radio recevies a new message
* @param radio_tx_callback is called after a successful TX is completed, and the radio is back in a disabled state.
* Must be called at the beginning of each timeslot
*/
void radio_init(radio_rx_cb radio_rx_callback, radio_tx_cb radio_tx_callback);


/**
* Send the given data packet via radio. Will abort any ongoing RX procedure, regardless of 
* how many packets have been received
*/
void radio_tx(uint8_t* data);

/**
* Set radio in RX mode. @param consectutive_receives indicates the number of packets to receive before the 
* radio goes back to disabled state
*/
void radio_rx(uint8_t consecutive_receives);

/**
* Disable the radio. Overrides any ongoing rx or tx procedures
*/
void radio_disable(void);


/**
* Radio event handler, checks any relevant events generated by the radio, and acts accordingly
*/
void radio_event_handler(void);



#endif /* _RADIO_CONTROL_H__*/
